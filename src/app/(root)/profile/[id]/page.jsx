import ProfileHeader from "@/components/shared/ProfileHeader";
import { profileTabs } from "@/constants";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Image from "next/image";
import { getServerSession } from "next-auth";
import { authOptions } from "@/app/api/auth/[...nextauth]/route";
import { redirect } from "next/navigation";
import { fetchUser } from "@/lib/actions/user.action";
import ThreadsTab from "@/components/shared/ThreadsTab";
// import Link from "next/link";
import RepliesTab from "@/components/shared/RepliesTab";
// import { fetchReplyThreads } from "@/lib/actions/thread.action";

export async function generateMetadata({ params, searchParams }) {
  const userInfo = await fetchUser(params.id);
  return {
    title: `${userInfo?.name} | profile`,
    description: 'Generated by create next app',
  }
}

const page = async ({params}) => {
  const session = await getServerSession(authOptions);
  // console.log(session);
  if (!session) {
    redirect("/login");
  }
  const userInfo = await fetchUser(params.id);
  if (!userInfo?.onboarded) redirect("/onboarding");


  return (
    <section>
      <ProfileHeader
        accountId={userInfo.id}
        authUserId={session.user.id}
        name={userInfo.name}
        username={userInfo.username}
        imgUrl={userInfo.image}
        bio={userInfo.bio}
      />

      <div className="mt-9">
        <Tabs defaultValue="threads" className="w-full">
          <TabsList className="flex min-h-[50px] flex-1 items-center gap-3 bg-dark-2 text-light-2 data-[state=active]:bg-[#0e0e12] data-[state=active]:text-gray-300">
            {profileTabs.map((tab) => (
              <TabsTrigger
                key={tab.label}
                value={tab.value}
                className={`flex min-h-[50px] flex-1 items-center gap-3 bg-gray-2 text-light-2 data-[state=active]:bg-[#0e0e12] data-[state=active]:text-gray-300`}
              >
                <Image
                  src={tab.icon}
                  alt={tab.label}
                  width={24}
                  height={24}
                  className="object-contain"
                />
                <p className="max-sm:hidden">{tab.label}</p>

                {tab.label === "Threads" && (
                  <p className="ml-1 rounded-sm bg-light-4 px-2 py-1">
                    {userInfo.threads.length}
                  </p>
                )}
              </TabsTrigger>
            ))}
          </TabsList>
            <TabsContent
              value='threads'
            >
              <div className="w-full text-light-1">
              {/* @ts-ignore */}
              <ThreadsTab
                currentUserId={session?.user.id}
                accountId={userInfo.id}
                accountType="User"
                />
                </div>
            </TabsContent>
            <TabsContent
              value='replies'
            >
               <RepliesTab 
                currentUserId={session?.user.id}
                accountId={params.id}
                accountType="User"/>
            </TabsContent>
            <TabsContent
              value='liked'
            >
              <div><h1 className="mb-4 pt-5 text-center text-2xl font-extrabold text-gray-900 dark:text-white md:text-5xl lg:text-6xl"><span className="text-transparent bg-clip-text bg-gradient-to-r to-emerald-600 from-sky-400">Liked Tab</span> Is Under Construction</h1></div>
            </TabsContent>
        </Tabs>
      </div>
    </section>
  );
};

export default page;
